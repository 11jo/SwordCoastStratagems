DEFINE_PATCH_FUNCTION assign_hlas
STR_VAR filename=""
BEGIN
    LPF num_hlas RET num_warrior num_thief END
    LPF customize_hlas INT_VAR num_warrior num_thief  STR_VAR filename RET num_warrior num_thief END
    PATCH_IF (num_warrior>0 || num_thief>0) BEGIN
           LPF CRE_read_kit RET kit=value END
           LPF CRE_read_class RET class=value END
           INNER_ACTION BEGIN
               LAUNCH_ACTION_MACRO read_in_hla_preferences
               LAUNCH_ACTION_MACRO read_in_hla_prerequisites
           END
           PATCH_IF (num_warrior>0) BEGIN
              PATCH_IF "%class%" STRING_EQUAL_CASE paladin BEGIN
                   PATCH_IF "%kit%" STRING_EQUAL_CASE blackguard BEGIN
                      LPF add_this_hla STR_VAR arguments="%BLACKGUARD_SUMMON_FALLEN_DEVA%" END
                   END ELSE BEGIN
                      LPF add_this_hla STR_VAR arguments="%PALADIN_SUMMON_DEVA%" END
                   END
                   SET num_warrior = num_warrior - 1
              END

              // wipe preexisting HLAs
               LPF CRE_remove_spells STR_VAR arguments=~WARRIOR_WHIRLWIND WARRIOR_WAR_CRY WARRIOR_GREATER_WHIRLWIND WARRIOR_CRITICAL_STRIKE WARRIOR_POWER_ATTACK WARRIOR_RESIST_MAGIC WARRIOR_HARDINESS~ END
               PATCH_IF VARIABLE_IS_SET $HLAcount( ~%kit%~) BEGIN
                   SPRINT basename ~%kit%~
               END ELSE
               PATCH_IF VARIABLE_IS_SET $HLAcount( ~%class%~) BEGIN
                   SPRINT basename ~%class%~
               END ELSE BEGIN
                   SPRINT basename ~FIGHTER~
               END
               SET max=$HLAcount(~%basename%~)
               WHILE (num_warrior>0) BEGIN
                  SET num_warrior=num_warrior - 1
                  SET random =RANDOM (1 max)
                  SPRINT arguments $HLA( ~%basename%~ ~%random%~)
                  LPF add_this_hla STR_VAR arguments END
               END
           END
           PATCH_IF (num_thief>0) BEGIN
              // wipe preexisting HLAs
               LPF CRE_remove_spells STR_VAR arguments=~ROGUE_ASSASINATION ROGUE_EVASION ROGUE_GREATER_EVASION~ END
               PATCH_IF VARIABLE_IS_SET $HLAcount( ~%kit%~) BEGIN
                   SPRINT basename ~%kit%~
               END ELSE
               PATCH_IF VARIABLE_IS_SET $HLAcount( ~%class%~) BEGIN
                   SPRINT basename ~%class%~
               END ELSE BEGIN
                   SPRINT basename ~THIEF~
               END
               SET max=$HLAcount(~%basename%~)
               WHILE (num_thief>0) BEGIN
                  SET num_thief=num_thief - 1
                  SET random =RANDOM (1 max)
                  SPRINT arguments $HLA( ~%basename%~ ~%random%~)
                  LPF add_this_hla STR_VAR arguments END
               END
           END
    END
END


DEFINE_PATCH_FUNCTION customize_hlas
INT_VAR num_warrior=0
        num_thief=0
STR_VAR filename=""
RET     num_warrior
        num_thief
BEGIN
        TO_UPPER filename
        INNER_ACTION BEGIN
                 LAUNCH_ACTION_MACRO read_in_hla_preferences
                 LAUNCH_ACTION_MACRO read_in_hla_prerequisites
        END
        PATCH_FOR_EACH type IN warrior thief BEGIN
           PATCH_IF VARIABLE_IS_SET  ~hla_override_%type%_%filename%~ BEGIN
              SET number= ~%num_%type%%~
              SPRINT arguments EVALUATE_BUFFER ~%hla_override_%type%_%filename%%~
              LPF add_this_hla INT_VAR number STR_VAR arguments RET number=number END
              SET ~num_%type%~=number
           END
        END


END

DEFINE_PATCH_FUNCTION add_this_hla
   INT_VAR number=0
   STR_VAR arguments=""
   RET     number
BEGIN
   PATCH_IF ~%arguments%~ STRING_COMPARE_CASE ~~ BEGIN
      INNER_ACTION BEGIN
               LAUNCH_ACTION_MACRO read_in_hla_preferences
               LAUNCH_ACTION_MACRO read_in_hla_prerequisites
      END
      LPF return_first_entry STR_VAR list= ~%arguments%~ RET hla=entry arguments=list END
      PATCH_IF !VARIABLE_IS_SET $hla_prerequisite( ~%hla%~) BEGIN
         LPF CRE_add_spells STR_VAR arguments=~%hla%~ END
         SET number=number - 1
      END ELSE BEGIN
         SPRINT pre_req $hla_prerequisite(~%hla%~)
         LPF CRE_has_spell STR_VAR arguments= ~%pre_req%~ RET value=value END
         PATCH_IF value=1 BEGIN
            LPF CRE_add_spells STR_VAR arguments=~%hla%~ END
            SET number = number - 1
         END ELSE BEGIN
            LPF add_this_hla INT_VAR number STR_VAR arguments=~%pre_req%~ RET number=number END
         END
      END
      LPF add_this_hla INT_VAR number STR_VAR arguments RET number=number END
   END
END

DEFINE_PATCH_FUNCTION num_hlas
RET num_warrior num_thief has_hlas
BEGIN
   //// warrior
   PATCH_MATCH "%class%" WITH
   FIGHTER
   BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_warrior = level>19? level - 19: 0
   END
   RANGER PALADIN
   BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_warrior = level>17? level - 17: 0
   END
   FIGHTER_MAGE FIGHTER_CLERIC FIGHTER_THIEF FIGHTER_DRUID
   BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_warrior = level>13? level - 13: 0
   END
   FIGHTER_MAGE_THIEF FIGHTER_MAGE_CLERIC
   BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_warrior = level>11? level - 11: 0
   END
   CLERIC_RANGER 
   BEGIN
        LPF CRE_read_level2 RET level=value END
        SET num_warrior = level>17? level - 17: 0
   END
   MONK 
   BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_warrior= level>21? level - 21: 0
   END
   DEFAULT
       SET num_warrior=0
   END
   //// thief
   PATCH_MATCH "%class%" WITH
   THIEF BEGIN
        LPF CRE_read_level1 RET level=value END
        SET num_thief= level>23? level - 23: 0
   END
   FIGHTER_THIEF CLERIC_THIEF MAGE_THIEF BEGIN
        LPF CRE_read_level2 RET level=value END
        SET num_thief= level>16? level - 16: 0
   END
   FIGHTER_MAGE_THIEF BEGIN
        LPF CRE_read_level3 RET level=value END
        SET num_thief= level>14? level - 14: 0
   END
   DEFAULT
      SET num_thief=0
   END
   PATCH_IF num_thief>0 || num_warrior>0 BEGIN
      SET has_hlas=1
   END ELSE BEGIN
      SET has_hlas=0
   END
END

DEFINE_ACTION_MACRO read_in_hla_preferences
BEGIN
 ACTION_IF !VARIABLE_IS_SET read_in_hla_preferences BEGIN
   OUTER_SET read_in_hla_preferences=1
   ACTION_IF refinements=1 BEGIN
        OUTER_SPRINT filebase refinements
   END ELSE BEGIN
        OUTER_SPRINT filebase core
   END
   COPY ~%scsroot%/genai/hla_choices/%filebase%.2da~ ~%workspace%~
         READ_2DA_ENTRIES_NOW hla_choices_read 0
         COUNT_2DA_COLS colcount
         FOR (i=1;i<hla_choices_read;i+=1) BEGIN
            READ_2DA_ENTRY_FORMER hla_choices_read i 0 basename
            SET count=0
            FOR (j=1;j<colcount;j+=1) BEGIN
               READ_2DA_ENTRY_FORMER hla_choices_read i j data
               PATCH_IF ~%data%~ STRING_COMPARE_CASE ~NULL~ BEGIN
                  SPRINT  ~HLA_%basename%_%j%~ ~%data%~
                  SET count+=1
               END
            END
            SET  ~HLAcount_%basename%~=count
         END
     BUT_ONLY
     ACTION_FOR_EACH type IN warrior thief BEGIN
     COPY ~%scsroot%/genai/hla_choices/override_%type%.2da~ ~%workspace%~
         READ_2DA_ENTRIES_NOW hla_override_read 0
         FOR (i=1;i<hla_override_read;i+=1) BEGIN
             READ_2DA_ENTRY_FORMER hla_override_read i 0 key
             READ_2DA_ENTRY_FORMER hla_override_read i 1 value
             INNER_PATCH_SAVE value ~%value%~ BEGIN
                REPLACE_TEXTUALLY ~-~ ~ ~
             END
             TO_UPPER key
             SPRINT $hla_override(~%type%~ ~%key%~) ~%value%~
         END
       BUT_ONLY
     END
   END
END

DEFINE_ACTION_MACRO read_in_hla_prerequisites
BEGIN
   ACTION_IF !VARIABLE_IS_SET read_in_hla_prerequisites BEGIN
     OUTER_SET read_in_hla_prerequisites=1
     ACTION_CLEAR_ARRAY hla_prerequisite
     ACTION_DEFINE_ASSOCIATIVE_ARRAY hla_prerequisite BEGIN
      WARRIOR_CRITICAL_STRIKE=>WARRIOR_POWER_ATTACK
      WARRIOR_SMITE=>WARRIOR_CRITICAL_STRIKE
      ROGUE_GREATER_EVASION=>ROGUE_EVASION
      WARRIOR_GREATER_DEATHBLOW =>WARRIOR_DEATHBLOW
      WARRIOR_GREATER_WHIRLWIND =>WARRIOR_WHIRLWIND
      MONK_DRAGON_FIST => MONK_SHADOWLESS_KICK
      MONK_TIGER_STRIKE => MONK_DRAGON_FIST
      MONK_CHANT =>  MONK_DIAMOND_SOUL
      BARBARIAN_GREATER_WAR_CRY=> WARRIOR_WAR_CRY
      END
   END
END

