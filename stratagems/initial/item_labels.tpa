DEFINE_ACTION_FUNCTION item_labels
       INT_VAR omniscient=0
			   do_not_detect=0
BEGIN

   <<<<<<<< .../stratagems-inline/autolib.slb
   >>>>>>>>
   
   COPY ~.../stratagems-inline/autolib.slb~ ~%data_loc%~

 
   COPY ~%MOD_FOLDER%/ssl/libdata.txt~ ~%MOD_FOLDER%/ssl~
       READ_2DA_ENTRIES_NOW stats_data 5
       SET see_name_code=0
       FOR (i=0;i<stats_data;i+=1) BEGIN
          READ_2DA_ENTRY_FORMER stats_data i 0 parameter
          READ_2DA_ENTRY_FORMER stats_data i 1 opcode
          READ_2DA_ENTRY_FORMER stats_data i 2 trigger
          READ_2DA_ENTRY_FORMER stats_data i 3 statname
          READ_2DA_ENTRY_FORMER stats_data i 4 markername
          PATCH_MATCH opcode WITH
          101 BEGIN
             SPRINT $101_stat(~%parameter%~) ~%statname%~
             SPRINT $opcodelist("%parameter%") ""
             PATCH_IF "%markername%" STRING_COMPARE "*" BEGIN
                LPF warning STR_VAR warning="In item_labels, you've tried to give a bespoke name to a 101-type item. You can only do this with 206-types." END
             END
             LPF append_autolib INT_VAR omniscient STR_VAR trigger statname markername END
             INNER_ACTION BEGIN
                LAF ds_resolve_stat STR_VAR id="%statname%" RET "NEW_STAT_%statname%"=stat_ind END   // make sure they're all in SPLSTATE or STATS so scripts compile
                LAF ds_resolve_stat STR_VAR id="%statname%_SEEN" RET "NEW_STAT_%statname%_SEEN"=stat_ind END
             END
          END
          206 BEGIN
             TO_UPPER parameter
             SPRINT $206_stat(~%parameter%~) ~%statname%~
             SET see_name_code+=1
             LPF append_autolib INT_VAR omniscient STR_VAR trigger statname markername END
             INNER_ACTION BEGIN
                LAF ds_resolve_stat STR_VAR id="%statname%" RET "NEW_STAT_%statname%"=stat_ind END   // make sure they're all in SPLSTATE or STATS so scripts compile
                LAF ds_resolve_stat STR_VAR id="%statname%_SEEN" RET "NEW_STAT_%statname%_SEEN"=stat_ind END
                ACTION_IF "%markername%" STRING_COMPARE "*" BEGIN
                    LAF ds_resolve_stat STR_VAR id="%markername%" END
                END
             END
          END
          DEFAULT
             LPF warning STR_VAR warning=~Unrecognised opcode in %MOD_FOLDER%/ssl/libdata.txt~ END
          END
       END
   BUT_ONLY

	LAF check_label STR_VAR label=STRATAGEMS_dw_opcodes RET value END
	ACTION_IF !value BEGIN
		ACTION_CLEAR_ARRAY item_ds_array
		COPY_EXISTING_REGEXP - 
			~.*\.itm~ nowhere
			~\(spcl152\|spcl321\|dw#sshr\).spl~ nowhere
			~spcl321.spl~ nowhere
			PATCH_TRY 
				PATCH_IF "%SOURCE_EXT%" STR_EQ "SPL" BEGIN
					GET_OFFSET_ARRAY fx_arr SPL_V10_GEN_EFFECTS
				END ELSE BEGIN
					GET_OFFSET_ARRAY fx_arr ITM_V10_GEN_EFFECTS
				END
				PHP_EACH fx_arr AS fx_ind=>fx_off BEGIN
					PATCH_IF (SHORT_AT fx_off)=101 || (SHORT_AT fx_off)=206 BEGIN
						SPRINT $item_ds_array("%SOURCE_FILE%") ""
					END
				END
				PATCH_IF "%SOURCE_EXT%" STR_EQ "SPL" BEGIN
					GET_OFFSET_ARRAY ab_arr SPL_V10_HEADERS
				END ELSE BEGIN
					GET_OFFSET_ARRAY ab_arr ITM_V10_HEADERS
				END
				PHP_EACH ab_arr AS ab_ind=>ab_off BEGIN
					GET_OFFSET_ARRAY2 fx_arr ab_off ITM_V10_HEAD_EFFECTS
					PHP_EACH fx_arr AS fx_ind=>fx_off BEGIN
						PATCH_IF (SHORT_AT fx_off)=101 || (SHORT_AT fx_off)=206 BEGIN
							SPRINT $item_ds_array("%SOURCE_FILE%") ""
						END					
					END
				END
		   
			WITH DEFAULT
				PATCH_WARN "SCS's 'item_labels' function has encountered a file it doesn't know how to patch, %SOURCE_RES%.itm (probably the file was broken by a previous mod). SCS has skipped it and continued with installation, but this may cause instabilities."	   
			END

		BUT_ONLY
		
		ACTION_PHP_EACH item_ds_array AS resref=>discard BEGIN
			COPY_EXISTING "%resref%" override
				LPF CLONE_EFFECT INT_VAR silent=1 STR_VAR match_function=match_ds_entry function=patch_ds_entry END
		END
	END
	LAF array_echo STR_VAR array=opcodelist END
	LAF array_read STR_VAR file="see_protection_spells.2da" path="%MOD_FOLDER%/ds" RET_ARRAY protection_spell_array=array END
	ACTION_PHP_EACH protection_spell_array AS protection_spell=>discard BEGIN
		ACTION_IF VARIABLE_IS_SET "%protection_spell%" BEGIN
			OUTER_SPRINT protection_spell "%%protection_spell%%"
		END ELSE
		ACTION_IF VARIABLE_IS_SET "WIZARD_%protection_spell%" BEGIN
			OUTER_SPRINT protection_spell "%WIZARD_%protection_spell%%"
		END ELSE 
		ACTION_IF VARIABLE_IS_SET "CLERIC_%protection_spell%" BEGIN
			OUTER_SPRINT protection_spell "%CLERIC_%protection_spell%%"		
		END		
		spl.edit[%protection_spell%|allow_missing:i=1]
		[
			IF {enhanced_edition}
			{{
				m.ab_fx.clone{LPF ds_item STR_VAR arguments="%s_opcode%" RET s_parameter2=value END s_opcode=328 s_target=2 s_timing=0 s_duration=144 s_special=1 s_parameter1=1|match="VARIABLE_IS_SET $opcodelist(~%s_opcode%~)"}
			}}
			ELSE
			{{
				m.ab_fx.clone{LPF ds_item STR_VAR arguments="%s_opcode%" RET s_parameter2a=value END s_parameter2b=1 s_opcode=318 s_target=2 s_timing=0 s_duration=144 s_parameter1=1|match="VARIABLE_IS_SET $opcodelist(~%s_opcode%~)"}
				
			}}
		]
	END
END



DEFINE_PATCH_FUNCTION ds_item 
   STR_VAR arguments=""
   RET value
BEGIN
   SPRINT idbase $101_stat("%arguments%")
   INNER_ACTION BEGIN
      LAF ds_resolve_stat STR_VAR id="%idbase%_SEEN" RET value=stat_ind END
   END
END

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_DIMORPHIC_FUNCTION append_autolib
       INT_VAR omniscient=0 see_name_code=0
       STR_VAR trigger=""
               statname=""
               markername=""
BEGIN
         PRINT "appending autolib"
		 APPEND_OUTER ~%data_loc%/autolib.slb~ ~TRIGGER=%trigger%~
          ACTION_IF omniscient BEGIN
             APPEND_OUTER ~%data_loc%/autolib.slb~ ~!CheckSpellState(scstarget,%statname%)~
          END ELSE BEGIN
             ACTION_IF "%markername%" STRING_EQUAL "*" BEGIN
                OUTER_SPRINT markername "%statname%_SEEN"
             END
             APPEND_OUTER ~%data_loc%/autolib.slb~ ~OR(2)!CheckSpellState(scstarget,%markername%)!CheckSpellState(scstarget,%statname%)~
          END
END

DEFINE_PATCH_FUNCTION match_ds_entry
RET value
BEGIN
   READ_SHORT 0x0 opcode
   PATCH_IF opcode=101 BEGIN
        READ_LONG 0x8 parameter2
        PATCH_IF VARIABLE_IS_SET $101_stat("%parameter2%") BEGIN
           SET value=1
        END ELSE BEGIN
           SET value=0
        END
   END ELSE
   PATCH_IF opcode=206 BEGIN
        READ_ASCII 0x14 resource
        TO_UPPER resource
        PATCH_IF VARIABLE_IS_SET $206_stat("%resource%") BEGIN
           SET value=1
        END ELSE BEGIN
           SET value=0
        END
   
   END ELSE BEGIN
      SET value=0
   END
END

DEFINE_PATCH_FUNCTION patch_ds_entry
BEGIN
   READ_SHORT 0x0 opcode
   PATCH_IF opcode=101 BEGIN
      READ_LONG 0x8 parameter2
      SPRINT stat $101_stat("%parameter2%")
   END ELSE
   PATCH_IF opcode=206 BEGIN
        READ_ASCII 0x14 resource
        TO_UPPER resource
        SPRINT stat $206_stat("%resource%")
   END ELSE BEGIN
      PATCH_FAIL "error in patch_ds_entry in item_labels.tpa: illegal opcode"
   END
   SET stat_ind=EVAL "%NEW_STAT_%stat%%"
   PATCH_IF enhanced_edition BEGIN
         WRITE_SHORT 0x0 328
         WRITE_LONG 0x8 stat_ind
         WRITE_LONG 0x2c 1
   END ELSE BEGIN
         WRITE_SHORT 0x0 318
         WRITE_LONG 0x4 1
         WRITE_SHORT 0x8 stat_ind
   END




END
