DEFINE_ACTION_MACRO ~Taimon_fix_MI~  BEGIN


OUTER_PATCH_SAVE orig_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x1e
    WRITE_LONG   0x000 0x8bfc558b
    WRITE_LONG   0x004 0x488bd445
    WRITE_LONG   0x008 0x484a8948
    WRITE_LONG   0x00c 0x8bfc558b
    WRITE_LONG   0x010 0x888bd445
    WRITE_LONG   0x014 0x000000cc
    WRITE_LONG   0x018 0x00cc8a89
    WRITE_SHORT  0x01c 0x0000
END

OUTER_PATCH_SAVE patch_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x1e
    WRITE_LONG   0x000 0x8bd4558b
    WRITE_LONG   0x004 0x4889484a
    WRITE_LONG   0x008 0x70c08348
    WRITE_LONG   0x00c 0x8b70c283
    WRITE_LONG   0x010 0x4889544a
    WRITE_LONG   0x014 0x5c4a8b54
    WRITE_LONG   0x018 0x905c4889
    WRITE_SHORT  0x01c 0x9090
END

COPY bgmain.exe bgmain.exe
    READ_ASCII 0x00121184 target_bytes_1 ELSE 0 (0x1e)
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%orig_bytes_1%~)
    THEN BEGIN
        WRITE_ASCIIE 0x00121184 ~%patch_bytes_1%~ (0x1e)
    END ELSE
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%patch_bytes_1%~)
    THEN BEGIN
        PATCH_PRINT ~Patch already applied. Skipping ...~
    END ELSE INNER_ACTION BEGIN FAIL ~Target bytes don't match. Aborting ...~ END
BUT_ONLY

END

// ---------------------------------------------------------------------------

DEFINE_ACTION_MACRO ~Taimon_MI_AoE~     BEGIN


// This checks bit 24 of the parent resource flags in the damage effect.
// You can flag both items and spells. (extended header/spell flags)

OUTER_PATCH_SAVE orig_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x23
    WRITE_LONG   0x000 0x888a0845
    WRITE_LONG   0x004 0x00002e7d
    WRITE_LONG   0x008 0x8be84d88
    WRITE_LONG   0x00c 0xbf0f0855
    WRITE_LONG   0x010 0x00140482
    WRITE_LONG   0x014 0x4d8b5000
    WRITE_LONG   0x018 0xffe181e8
    WRITE_LONG   0x01c 0x83000000
    WRITE_SHORT  0x020 0x01c1
    WRITE_BYTE   0x022 0x51
END

OUTER_PATCH_SAVE patch_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x23
    WRITE_LONG   0x000 0x898bc84d
    WRITE_LONG   0x004 0x00000098
    WRITE_LONG   0x008 0x0000e181
    WRITE_LONG   0x00c 0xc9850100
    WRITE_LONG   0x010 0x0144850f
    WRITE_LONG   0x014 0xbf0f0000
    WRITE_LONG   0x018 0x00140488
    WRITE_LONG   0x01c 0xc2835100
    WRITE_SHORT  0x020 0x5201
    WRITE_BYTE   0x022 0x90
END

COPY bgmain.exe bgmain.exe
    READ_ASCII 0x00107ee4 target_bytes_1 ELSE 0 (0x23)
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%orig_bytes_1%~)
    THEN BEGIN
        WRITE_ASCIIE 0x00107ee4 ~%patch_bytes_1%~ (0x23)
    END ELSE
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%patch_bytes_1%~)
    THEN BEGIN
        PATCH_PRINT ~Patch already applied. Skipping ...~
    END ELSE INNER_ACTION BEGIN FAIL ~Target bytes don't match. Aborting ...~ END
BUT_ONLY

END
// ---------------------------------------------------------------------------

DEFINE_ACTION_MACRO ~Taimon_fix_dispel~   BEGIN


OUTER_PATCH_SAVE orig_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0xe
    WRITE_LONG   0x000 0x8b0ac06b
    WRITE_LONG   0x004 0xe1811c4d
    WRITE_LONG   0x008 0x000000ff
    WRITE_SHORT  0x00c 0xc12b
END

OUTER_PATCH_SAVE patch_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0xe
    WRITE_LONG   0x000 0x811c4d8b
    WRITE_LONG   0x004 0x0000ffe1
    WRITE_LONG   0x008 0x6bc12b00
    WRITE_SHORT  0x00c 0x0ac0
END

OUTER_PATCH_SAVE orig_bytes_2 ~~ BEGIN
    INSERT_BYTES 0x000 0x12
    WRITE_LONG   0x000 0x7ff4553b
    WRITE_LONG   0x004 0x18458b0d
    WRITE_LONG   0x008 0x0000ff25
    WRITE_LONG   0x00c 0x63f88300
    WRITE_SHORT  0x010 0x097e
END

OUTER_PATCH_SAVE patch_bytes_2 ~~ BEGIN
    INSERT_BYTES 0x000 0x12
    WRITE_LONG   0x000 0x7463fa83
    WRITE_LONG   0x004 0x18458b0d
    WRITE_LONG   0x008 0x0000ff25
    WRITE_LONG   0x00c 0xf4453b00
    WRITE_SHORT  0x010 0x097c
END

COPY bgmain.exe bgmain.exe
    READ_ASCII 0x00143f42 target_bytes_1 ELSE 0 (0xe)
    READ_ASCII 0x00143f97 target_bytes_2 ELSE 0 (0x12)
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%orig_bytes_1%~)
         AND (~%target_bytes_2%~ STRING_EQUAL ~%orig_bytes_2%~)
    THEN BEGIN
        WRITE_ASCIIE 0x00143f42 ~%patch_bytes_1%~ (0xe)
        WRITE_ASCIIE 0x00143f97 ~%patch_bytes_2%~ (0x12)
    END ELSE
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%patch_bytes_1%~)
         AND (~%target_bytes_2%~ STRING_EQUAL ~%patch_bytes_2%~)
    THEN BEGIN
        PATCH_PRINT ~Patch already applied. Skipping ...~
    END ELSE INNER_ACTION BEGIN FAIL ~Target bytes don't match. Aborting ...~ END
BUT_ONLY

END

DEFINE_ACTION_MACRO ~Taimon_stoneskin_color~ BEGIN



OUTER_PATCH_SAVE orig_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x6
    WRITE_LONG   0x000 0x008c8d0f
    WRITE_SHORT  0x004 0x0000
END

OUTER_PATCH_SAVE patch_bytes_1 ~~ BEGIN
    INSERT_BYTES 0x000 0x6
    WRITE_LONG   0x000 0x00008de9
    WRITE_SHORT  0x004 0x9000
END

COPY bgmain.exe bgmain.exe
    READ_ASCII 0x001399d5 target_bytes_1 ELSE 0 (0x6)
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%orig_bytes_1%~)
    THEN BEGIN
        WRITE_ASCIIE 0x001399d5 ~%patch_bytes_1%~ (0x6)
    END ELSE
    PATCH_IF (~%target_bytes_1%~ STRING_EQUAL ~%patch_bytes_1%~)
    THEN BEGIN
        PATCH_PRINT ~Patch already applied. Skipping ...~
    END ELSE INNER_ACTION BEGIN FAIL ~Target bytes don't match. Aborting ...~ END
BUT_ONLY

END